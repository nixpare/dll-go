// Code generated by 'go generate'; DO NOT EDIT.
package main

import "C"
import (
	"syscall"

	"unsafe"

	"golang.org/x/sys/windows"
)

var _ unsafe.Pointer

var (
	modhello_world = syscall.NewLazyDLL("./hello-world.dll")

	procPrintDLL = modhello_world.NewProc("_PrintDLL")
)

type _retPrintDLL struct {
	r0 int
	r1 error
}

func PrintDLL(msg *message) (n int, err error) {

	_r := new(_retPrintDLL)
	r0, _, errno := procPrintDLL.Call(uintptr(unsafe.Pointer(_r)), uintptr(unsafe.Pointer(msg)))

	if errno != windows.NOERROR {
		err = errno
		return
	}
	if r0 == 0 {
		err = syscall.Errno(1)
		return
	}
	n = _r.r0
	err = _r.r1

	return
}

//export _PrintDLL
func _PrintDLL(msg uintptr) (n int, err error) {
	n, err = Print((*message)(unsafe.Pointer(msg)))
	return
}

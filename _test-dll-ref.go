// Code generated by 'go generate'; DO NOT EDIT.

package main

import "C"
import (
	"syscall"
	"unsafe"

	"golang.org/x/sys/windows"
)

var _ unsafe.Pointer

var (
	modprint = syscall.NewLazyDLL("./print.dll")

	procPrintDLL = modprint.NewProc("_PrintDLL")
)

func PrintDLL(s string) (n int, echo *string, err error) {
	r0, r1, errno := procPrintDLL.Call(uintptr(unsafe.Pointer(&s)))
	n = *(*int)(unsafe.Pointer(r0))
	echo = (*string)(unsafe.Pointer(r1))
	if errno != windows.NOERROR {
		err = errno
	}
	return
}

//export _PrintDLL
func _PrintDLL(s uintptr) (n uintptr, echo uintptr) {
	_n, _echo := Print(*(*string)(unsafe.Pointer(s)))
	n = uintptr(unsafe.Pointer(&_n))
	echo = uintptr(unsafe.Pointer(&_echo))
	return
}
